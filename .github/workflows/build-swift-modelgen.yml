name: "Test compiling Swift Modelgen output"

on:
  push:
    branches:
      - test-swift-e2e

jobs:
  Build-Swift-Modelgen:
    name: Analyze
    runs-on: macos-13-xl
    permissions:
      actions: read
      contents: read

    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check Xcode Select
        run: xcode-select --version

      - name: Build and test
        run: xcodebuild -version

      - name: Check swift version
        run: swift --version
      
      - name: Check current dir
        run: pwd

      - name: Create Swift app
        run: |
          mkdir swiftapp && cd swiftapp
          swift package init --type executable
          rm -rf Package.swift
          echo '// swift-tools-version: 5.7
          import PackageDescription
          let package = Package(name: "swiftapp", platforms: [.macOS(.v10_15)], dependencies: [.package(url: "https://github.com/aws-amplify/amplify-swift", from: "2.12.0")   ], targets: [ .executableTarget( name: "swiftapp",  dependencies: [ .product(name: "Amplify", package: "amplify-swift") ], path: "Sources")]
          )' >> Package.swift
          cat Package.swift
          echo '
          // swiftlint:disable all
          import Amplify
          import Foundation

          public stru Todo: Model {
            public let id: String
            public var name: String
            public var description: String?
            public var createdAt: Temporal.DateTime?
            public var updatedAt: Temporal.DateTime?

            public init(id: String = UUID().uuidString,
                name: String,
                description: String? = nil) {
              self.init(id: id,
                name: name,
                description: description,
                createdAt: nil,
                updatedAt: nil)
            }
            internal init(id: String = UUID().uuidString,
                name: String,
                description: String? = nil,
                createdAt: Temporal.DateTime? = nil,
                updatedAt: Temporal.DateTime? = nil) {
                self.id = id
                self.name = name
                self.description = description
                self.createdAt = createdAt
                self.updatedAt = updatedAt
            }
          }
          ' >> Sources/Todo.swift
          cat Sources/Todo.swift
          swift package resolve
          swift build && swift run
        
